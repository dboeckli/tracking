1. Get the application details:

Application Name: {{ include "kafka.name" . }}
Application Version: {{ .Chart.AppVersion }}
Version: {{ .Chart.Version  }}

FQDN of the service (inside the cluster):
  {{ include "kafka.serviceFQDN" . }}

{{- if .Values.ingress.enabled }}
echo "Your application is exposed via Ingress. You can access it at:"
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
    echo "  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}"
  {{- end }}
{{- end }}

{{- else if contains "NodePort" .Values.service.type }}
echo "Your application is exposed via NodePort. Run the following commands:"
export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "kafka.fullname" . }})
export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
echo "  http://$NODE_IP:$NODE_PORT"

{{- else if contains "LoadBalancer" .Values.service.type }}
echo "Your application is exposed via LoadBalancer."
echo "It may take a few minutes for the external IP to become available. You can watch the status with:"
echo "  kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "kafka.fullname" . }}"
echo ""
echo "Once available, run:"
export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "kafka.fullname" . }} --template "{{"{{ (index .status.loadBalancer.ingress 0).ip }}"}}")
echo "  http://$SERVICE_IP:{{ .Values.service.port }}"

{{- else if contains "ClusterIP" .Values.service.type }}
echo "Your application is exposed via ClusterIP and is not externally accessible by default."
echo "To access it locally, use port-forwarding:"
export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "kafka.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
echo " kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT"
echo "Then open:"
echo " http://127.0.0.1:8080"

{{- end }}
